---
on:
  - push

jobs:
  terraform:
    name: terraform
    env:
      # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # AWS_REGION: "eu-west-1"
      # These variables are for the terraform vault provider.
      VAULT_ADDR: "http://vault:8200"
      VAULT_TOKEN: "simple"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        config:
          # - name: all # Can't test ryslog in CI.
          # - name: default # Can't write to /var/log/vault_audit.log
          - name: file
          - name: socket
          # - name: syslog # Can't test syslog in CI.
      max-parallel: 1
    services:
      vault:
        image: vault
        env:
          VAULT_DEV_ROOT_TOKEN_ID: "simple"
        ports:
          - 8200:8200
      socket:
        image: robertdebock/alpine:docker-netcat
        env:
          port: 8000
        ports:
          - 8000
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: terraform init
        uses: robertdebock/terraform-action@1.1.2
        with:
          directory: ./examples/${{ matrix.config.name }}
      - name: terraform validate
        uses: robertdebock/terraform-action@1.1.2
        with:
          action: validate
          directory: ./examples/${{ matrix.config.name }}
      - name: terraform plan
        uses: robertdebock/terraform-action@1.1.2
        with:
          action: plan
          directory: ./examples/${{ matrix.config.name }}
      - name: terraform apply
        uses: robertdebock/terraform-action@1.1.2
        with:
          action: apply
          directory: ./examples/${{ matrix.config.name }}
        env:
          TF_CLI_ARGS: "-input=false -auto-approve"
      - name: terraform destroy
        uses: robertdebock/terraform-action@1.1.2
        with:
          action: destroy
          directory: ./examples/${{ matrix.config.name }}
        env:
          TF_CLI_ARGS: "-input=false -auto-approve"
        if: ${{ always() }}
      - name: check container logs
        run: 'docker logs $(docker ps -aql)'
        if: ${{ failure() }}
